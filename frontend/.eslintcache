[{"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/index.js":"1","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/reportWebVitals.js":"2","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/Header.tsx":"3","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/Post.tsx":"4","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/PostList.tsx":"5","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/context/PostContext.tsx":"6","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/App.tsx":"7","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/PostForm.tsx":"8","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/actions/PostActions.ts":"9","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/apiUtil/PostApi.ts":"10"},{"size":154,"mtime":1608639955249,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1608638081180,"results":"13","hashOfConfig":"14"},{"size":754,"mtime":1608792701747,"results":"15","hashOfConfig":"12"},{"size":193,"mtime":1608790383622,"results":"16","hashOfConfig":"12"},{"size":633,"mtime":1608812622284,"results":"17","hashOfConfig":"12"},{"size":787,"mtime":1608810319392,"results":"18","hashOfConfig":"12"},{"size":686,"mtime":1608803804814,"results":"19","hashOfConfig":"12"},{"size":1220,"mtime":1608865852925,"results":"20","hashOfConfig":"12"},{"size":467,"mtime":1608863945848,"results":"21","hashOfConfig":"12"},{"size":652,"mtime":1608811840646,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1b95omd",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1supq6f",{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/index.js",[],["50","51"],"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/reportWebVitals.js",[],"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/Header.tsx",["52","53","54","55"],"//rafce to create a functional component based on file name\nimport React from 'react';\nimport logo from '../assets/nh_logo.png';\n\nconst Header = () => {\n    return (\n        <div className=\"header-wrapper\">\n            <div className=\"logo-wrapper\">\n                <img src={logo} alt=\"November's Harvest Logo\"/>\n            </div>\n            <div className=\"links-wrapper\">\n                <a>Blog</a>\n                <a>About Us</a>\n                <a>CSA 2021</a>\n                <a>Events</a>\n            </div>\n        </div> \n    ) \n} \n\nexport default Header\n// create general type file that allows typescript to understand png, svg, jpg\n// create one main directory, can separate posts and users, and put the methods on how to access the server\n",["56","57"],"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/Post.tsx",[],"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/PostList.tsx",["58"],"//import React, {useContext} from 'react';\nimport * as React from 'react';\nimport { PostContext} from '../context/PostContext';\nimport Post from './Post';\nimport PostForm from './PostForm';\n\ninterface IPost {\n    user: number\n    title: string\n    text: string\n    date: string\n}\n\nconst PostList: React.FC = () => {\n    const { posts } = React.useContext(PostContext);\n    return (\n        <div>\n            <ul className=\"posts-list\">\n                {posts.map(post => {\n                    return <Post post={post} />\n                })}\n\n            </ul>\n            <PostForm />\n        </div>\n    )\n}\n\nexport default PostList\n","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/context/PostContext.tsx",["59","60"],"import * as React from 'react';\n\n//import React, { createContext, useState } from 'react';\n// import PostList from '../components/PostList';\n\nexport const PostContext = React.createContext()\n\nconst PostContextProvider: React.FC = (props) => {\n    const [posts, setPosts] = React.useState([\n        {   user: '',\n            title: '',\n            text: '',\n            date: '',\n        }\n    ]);\n\n    return (\n        <PostContext.Provider value={{posts}}>\n            {props.children}\n        </PostContext.Provider>\n    )\n}\n\ninterface IPost {\n    user: number\n    title: string\n    text: string\n    date: string\n}\n\n\ntype ContextType = {\n    posts: IPost[]\n    savePost: (post: IPost) => void\n    updatePost: (id: number) => void\n}\n// api in context\nexport default PostContextProvider;","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/App.tsx",[],"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/PostForm.tsx",["61","62","63","64"],"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/actions/PostActions.ts",[],["65","66"],"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/apiUtil/PostApi.ts",["67"],"//import React from 'react';\nimport axios, { CancelTokenSource } from 'axios';\n\n// interface IPost {\n//     user: number\n//     title: string\n//     text: string\n//     date: string\n// }\n\n// const defaultPosts: IPost[] = [];\n\nexport const fetchPosts = () => {\n    return axios.get('/api/posts')\n};\n\nexport const fetchPost = postId => {\n    return axios.get(`/api/posts/${postId}`)\n};\n\nexport const createPost = data => {\n    return axios.post('/api/posts/', data)\n}\n\nexport const updatePost = (data) => {\n    return axios.patch(`/api/posts/${data._id}`, data)\n}\n\nexport const deletePost = (postId) => {\n    return axios.delete(`/api/posts/${postId}`)\n}",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":12,"column":17,"nodeType":"74","endLine":12,"endColumn":20},{"ruleId":"72","severity":1,"message":"73","line":13,"column":17,"nodeType":"74","endLine":13,"endColumn":20},{"ruleId":"72","severity":1,"message":"73","line":14,"column":17,"nodeType":"74","endLine":14,"endColumn":20},{"ruleId":"72","severity":1,"message":"73","line":15,"column":17,"nodeType":"74","endLine":15,"endColumn":20},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"75","severity":1,"message":"76","line":7,"column":11,"nodeType":"77","messageId":"78","endLine":7,"endColumn":16},{"ruleId":"75","severity":1,"message":"79","line":9,"column":19,"nodeType":"77","messageId":"78","endLine":9,"endColumn":27},{"ruleId":"75","severity":1,"message":"80","line":32,"column":6,"nodeType":"77","messageId":"78","endLine":32,"endColumn":17},{"ruleId":"75","severity":1,"message":"81","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":12},{"ruleId":"75","severity":1,"message":"82","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":17},{"ruleId":"75","severity":1,"message":"83","line":8,"column":13,"nodeType":"77","messageId":"78","endLine":8,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":12,"column":15,"nodeType":"77","messageId":"78","endLine":12,"endColumn":20},{"ruleId":"68","replacedBy":"84"},{"ruleId":"70","replacedBy":"85"},{"ruleId":"75","severity":1,"message":"86","line":2,"column":17,"nodeType":"77","messageId":"78","endLine":2,"endColumn":34},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'IPost' is defined but never used.","Identifier","unusedVar","'setPosts' is assigned a value but never used.","'ContextType' is defined but never used.","'Post' is defined but never used.","'usePost' is defined but never used.","'posts' is assigned a value but never used.",["87"],["88"],"'CancelTokenSource' is defined but never used.","no-global-assign","no-unsafe-negation"]