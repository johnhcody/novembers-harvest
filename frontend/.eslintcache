[{"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/index.js":"1","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/reportWebVitals.js":"2","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/Header.tsx":"3","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/Post.tsx":"4","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/PostList.tsx":"5","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/context/PostContext.tsx":"6","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/App.tsx":"7","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/PostForm.tsx":"8","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/actions/PostActions.ts":"9","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/apiUtil/PostApi.ts":"10"},{"size":154,"mtime":1608639955249,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1608638081180,"results":"13","hashOfConfig":"14"},{"size":754,"mtime":1608792701747,"results":"15","hashOfConfig":"12"},{"size":193,"mtime":1608790383622,"results":"16","hashOfConfig":"12"},{"size":633,"mtime":1608812622284,"results":"17","hashOfConfig":"12"},{"size":893,"mtime":1608868751738,"results":"18","hashOfConfig":"12"},{"size":686,"mtime":1608803804814,"results":"19","hashOfConfig":"12"},{"size":1826,"mtime":1608871696855,"results":"20","hashOfConfig":"12"},{"size":515,"mtime":1608879128626,"results":"21","hashOfConfig":"12"},{"size":665,"mtime":1608867086120,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1b95omd",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1supq6f",{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/index.js",[],["51","52"],"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/reportWebVitals.js",[],"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/Header.tsx",["53","54","55","56"],"//rafce to create a functional component based on file name\nimport React from 'react';\nimport logo from '../assets/nh_logo.png';\n\nconst Header = () => {\n    return (\n        <div className=\"header-wrapper\">\n            <div className=\"logo-wrapper\">\n                <img src={logo} alt=\"November's Harvest Logo\"/>\n            </div>\n            <div className=\"links-wrapper\">\n                <a>Blog</a>\n                <a>About Us</a>\n                <a>CSA 2021</a>\n                <a>Events</a>\n            </div>\n        </div> \n    ) \n} \n\nexport default Header\n// create general type file that allows typescript to understand png, svg, jpg\n// create one main directory, can separate posts and users, and put the methods on how to access the server\n",["57","58"],"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/Post.tsx",[],"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/PostList.tsx",["59"],"//import React, {useContext} from 'react';\nimport * as React from 'react';\nimport { PostContext} from '../context/PostContext';\nimport Post from './Post';\nimport PostForm from './PostForm';\n\ninterface IPost {\n    user: number\n    title: string\n    text: string\n    date: string\n}\n\nconst PostList: React.FC = () => {\n    const { posts } = React.useContext(PostContext);\n    return (\n        <div>\n            <ul className=\"posts-list\">\n                {posts.map(post => {\n                    return <Post post={post} />\n                })}\n\n            </ul>\n            <PostForm />\n        </div>\n    )\n}\n\nexport default PostList\n","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/context/PostContext.tsx",["60"],"import * as React from 'react';\n\n//import React, { createContext, useState } from 'react';\n// import PostList from '../components/PostList';\n\nexport const PostContext = React.createContext()\n\nconst PostContextProvider: React.FC = (props) => {\n    const [posts, setPosts] = React.useState([\n        {   user: '',\n            title: '',\n            text: '',\n            date: '',\n        }\n    ]);\n\n    const addInput = (field, input) => {\n        setPosts([...posts, {[field]: input}]);\n    }\n\n    return (\n        <PostContext.Provider value={{posts, addInput}}>\n            {props.children}\n        </PostContext.Provider>\n    )\n}\n\ninterface IPost {\n    user: number\n    title: string\n    text: string\n    date: string\n}\n\n\ntype ContextType = {\n    posts: IPost[]\n    savePost: (post: IPost) => void\n    updatePost: (id: number) => void\n}\n// api in context\nexport default PostContextProvider;","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/App.tsx",[],"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/components/PostForm.tsx",["61","62","63","64","65","66"],"import * as React from 'react';\nimport { PostContext } from '../context/PostContext';\nimport Post from './Post';\nimport { usePost, createPost } from '../actions/PostActions';\n\nexport {}\nconst PostForm: React.FC = () => {\n    const { posts, setPosts, addInput } = React.useContext(PostContext);\n    const { value, handleChange, reset } = usePost({ title: '', text: '' });\n\n\n    interface IPost {\n        user: number\n        title: string\n        text: string\n        date: string\n    }\n    const handleSubmit = (e) => {\n        debugger\n        e.preventDefault();\n        createPost({title: e.target[0].value, text: e.target[1].value, id: 1});\n        //reset();\n    }\n\n    // const handleChange = (field) => {\n    //     addInput(field, e.target.value);\n    // }\n    // const handleChange = e => {\n    //     e = () => setPosts(e.currentTarget.value)\n    // }\n\n    return (\n        // <PostContext.Consumer>\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <label>Title\n                    <input \n                        type=\"text\" \n                        onChange={handleChange}\n                        value={value.title}\n                        name=\"title\"\n                        placeholder=\"Post Title\"\n                        />\n                    {/* <input type=\"text\" {...bind} /> */}\n                    </label>\n                    <textarea \n                        onChange={handleChange}\n                        value={value.text}\n                        name=\"text\"\n                        placeholder=\"Post Body\"\n                        ></textarea>\n                    {/* <textarea {...bind}></textarea> */}\n                    <button>Submit</button>\n                </form>\n            </div>\n        // </PostContext.Consumer>\n    )\n\n}\n\nexport default PostForm;","/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/actions/PostActions.ts",[],"/Users/rusticair-9/Desktop/coding/novembers_harvest/frontend/src/apiUtil/PostApi.ts",["67"],"//import React from 'react';\nimport axios, { CancelTokenSource } from 'axios';\n\n// interface IPost {\n//     user: number\n//     title: string\n//     text: string\n//     date: string\n// }\n\n// const defaultPosts: IPost[] = [];\n\nexport const fetchPosts = () => {\n    return axios.get('/api/posts')\n};\n\nexport const fetchPost = postId => {\n    return axios.get(`/api/posts/${postId}`)\n};\n\nexport const createPost = data => {\n    debugger\n    return axios.post('/api/posts/', data)\n}\n\nexport const updatePost = (data) => {\n    return axios.patch(`/api/posts/${data._id}`, data)\n}\n\nexport const deletePost = (postId) => {\n    return axios.delete(`/api/posts/${postId}`)\n}",["68","69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":12,"column":17,"nodeType":"76","endLine":12,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":13,"column":17,"nodeType":"76","endLine":13,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":14,"column":17,"nodeType":"76","endLine":14,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":15,"column":17,"nodeType":"76","endLine":15,"endColumn":20},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"77","severity":1,"message":"78","line":7,"column":11,"nodeType":"79","messageId":"80","endLine":7,"endColumn":16},{"ruleId":"77","severity":1,"message":"81","line":36,"column":6,"nodeType":"79","messageId":"80","endLine":36,"endColumn":17},{"ruleId":"77","severity":1,"message":"82","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":12},{"ruleId":"77","severity":1,"message":"83","line":8,"column":13,"nodeType":"79","messageId":"80","endLine":8,"endColumn":18},{"ruleId":"77","severity":1,"message":"84","line":8,"column":20,"nodeType":"79","messageId":"80","endLine":8,"endColumn":28},{"ruleId":"77","severity":1,"message":"85","line":8,"column":30,"nodeType":"79","messageId":"80","endLine":8,"endColumn":38},{"ruleId":"77","severity":1,"message":"86","line":9,"column":34,"nodeType":"79","messageId":"80","endLine":9,"endColumn":39},{"ruleId":"77","severity":1,"message":"78","line":12,"column":15,"nodeType":"79","messageId":"80","endLine":12,"endColumn":20},{"ruleId":"77","severity":1,"message":"87","line":2,"column":17,"nodeType":"79","messageId":"80","endLine":2,"endColumn":34},{"ruleId":"70","replacedBy":"88"},{"ruleId":"72","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'IPost' is defined but never used.","Identifier","unusedVar","'ContextType' is defined but never used.","'Post' is defined but never used.","'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'addInput' is assigned a value but never used.","'reset' is assigned a value but never used.","'CancelTokenSource' is defined but never used.",["90"],["91"],"no-global-assign","no-unsafe-negation"]